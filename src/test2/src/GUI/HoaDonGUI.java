/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import DAO.ChiTietHoaDonDAO;
import DAO.HoaDonDAO;
import DAO.SachDAO;
import DTO.ChiTietHoaDonDTO;
import DTO.HoaDonDTO;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.awt.Choice;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.lang.Object;
import java.security.Timestamp;
import java.util.Vector;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author admin
 */
public class HoaDonGUI extends javax.swing.JFrame {

    private int DEFALUT_WIDTH;
    DefaultTableModel modelct = new DefaultTableModel();
    DefaultTableModel model = new DefaultTableModel();
    private HoaDonDAO hdBUS = new HoaDonDAO();
    private ChiTietHoaDonDAO ctBUS = new ChiTietHoaDonDAO();
    private SachDAO sachBUS = new SachDAO();
    //private ValidatorBUS vlBUS=new ValidatorBUS();
    private List<HoaDonDTO> hd = new ArrayList<>();
    private List<ChiTietHoaDonDTO> ct = new ArrayList<>();

    /**
     * Creates new form HoaDonGUI
     */
    public HoaDonGUI() {
        initComponents();
    }

    public HoaDonGUI(int width) {
        initComponents();
        this.setSize(width - 210, 935);
        LoadDB();
        LoadDBCTF();
        Sum();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txMaKH = new javax.swing.JTextField();
        txMaNV = new javax.swing.JTextField();
        txMaGG = new javax.swing.JTextField();
        txGiamGia = new javax.swing.JTextField();
        txThanhTien = new javax.swing.JTextField();
        txTongTien = new javax.swing.JTextField();
        txNgayLap = new javax.swing.JTextField();
        btSua = new javax.swing.JButton();
        btXoa = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbHD = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txTongTienHD = new javax.swing.JTextField();
        txSoLuongHD = new javax.swing.JTextField();
        btXuat = new javax.swing.JButton();
        btFHD = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btTim = new javax.swing.JButton();
        cboTK = new javax.swing.JComboBox<>();
        txtTK = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        txMaHDCT = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txSoSP = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txTongTienCT = new javax.swing.JTextField();
        btCTHDF = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbChiTietHD = new javax.swing.JTable();
        btSuaCT = new javax.swing.JButton();
        btXoaCT = new javax.swing.JButton();
        txMaHD = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("QUẢN LÝ HÓA ĐƠN");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Mã HĐ:");
        jLabel2.setMaximumSize(new java.awt.Dimension(62, 15));
        jLabel2.setMinimumSize(new java.awt.Dimension(62, 15));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Mã GG:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Mã NV:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Mã KH:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Tổng tiền:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Ngày lập:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Thành tiền:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Giảm giá:");

        btSua.setBackground(new java.awt.Color(255, 153, 0));
        btSua.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btSua.setText("SỬA");
        btSua.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btSua.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btSuaMouseClicked(evt);
            }
        });
        btSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSuaActionPerformed(evt);
            }
        });

        btXoa.setBackground(new java.awt.Color(255, 0, 0));
        btXoa.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btXoa.setForeground(new java.awt.Color(255, 255, 255));
        btXoa.setText("XÓA");
        btXoa.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btXoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btXoaMouseClicked(evt);
            }
        });
        btXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btXoaActionPerformed(evt);
            }
        });

        tbHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã HĐ", "Mã KH", "Mã NV", "Ngầy Lập", "Giảm Giá", "Tổng tiền", "Giảm giá", "Thành tiền"
            }
        ));
        tbHD.setSelectionBackground(new java.awt.Color(0, 0, 255));
        tbHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbHDMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbHD);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Số lượng hóa đơn:");
        jLabel12.setMaximumSize(new java.awt.Dimension(62, 15));
        jLabel12.setMinimumSize(new java.awt.Dimension(62, 15));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setText("Tổng tiền các hóa đơn:");
        jLabel17.setMaximumSize(new java.awt.Dimension(62, 15));
        jLabel17.setMinimumSize(new java.awt.Dimension(62, 15));

        txTongTienHD.setEditable(false);

        txSoLuongHD.setEditable(false);

        btXuat.setBackground(new java.awt.Color(0, 0, 204));
        btXuat.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btXuat.setForeground(new java.awt.Color(255, 255, 255));
        btXuat.setText("XUẤT");
        btXuat.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btXuat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btXuatMouseClicked(evt);
            }
        });

        btFHD.setBackground(new java.awt.Color(0, 153, 0));
        btFHD.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btFHD.setForeground(new java.awt.Color(255, 255, 255));
        btFHD.setText("LÀM MỚI");
        btFHD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btFHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btFHDMouseClicked(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3), "TÌM KIẾM HÓA ĐƠN", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(51, 51, 255))); // NOI18N

        btTim.setBackground(new java.awt.Color(204, 204, 204));
        btTim.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btTim.setForeground(new java.awt.Color(255, 255, 255));
        btTim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search_25px_focus.png"))); // NOI18N
        btTim.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btTim.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btTimMouseClicked(evt);
            }
        });

        cboTK.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã HĐ", "Mã NV", "Mã KH" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboTK, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addComponent(txtTK, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(402, 402, 402)
                .addComponent(btTim, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cboTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btTim, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3), "CHI TIẾT HÓA ĐƠN", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(204, 0, 204))); // NOI18N

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setText("Mã HĐ");
        jLabel18.setMaximumSize(new java.awt.Dimension(62, 15));
        jLabel18.setMinimumSize(new java.awt.Dimension(62, 15));

        txMaHDCT.setEditable(false);

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel22.setText("Tổng số sản phẩm");
        jLabel22.setMaximumSize(new java.awt.Dimension(62, 15));
        jLabel22.setMinimumSize(new java.awt.Dimension(62, 15));

        txSoSP.setEditable(false);

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel23.setText("Tổng tiền hóa đơn");
        jLabel23.setMaximumSize(new java.awt.Dimension(62, 15));
        jLabel23.setMinimumSize(new java.awt.Dimension(62, 15));

        txTongTienCT.setEditable(false);

        btCTHDF.setBackground(new java.awt.Color(153, 153, 153));
        btCTHDF.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btCTHDF.setForeground(new java.awt.Color(255, 255, 255));
        btCTHDF.setText("TẤT CẢ CHI TIẾT HÓA ĐƠN");
        btCTHDF.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btCTHDF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btCTHDFMouseClicked(evt);
            }
        });

        tbChiTietHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã HĐ", "Mã sách", "Tên sách", "Đơn giá", "Số lượng", "Giảm giá", "Thành tiền"
            }
        ));
        tbChiTietHD.setSelectionBackground(new java.awt.Color(0, 204, 0));
        jScrollPane2.setViewportView(tbChiTietHD);

        btSuaCT.setBackground(new java.awt.Color(51, 0, 204));
        btSuaCT.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btSuaCT.setForeground(new java.awt.Color(255, 255, 255));
        btSuaCT.setText("SỬA");
        btSuaCT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btSuaCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btSuaCTMouseClicked(evt);
            }
        });

        btXoaCT.setBackground(new java.awt.Color(255, 0, 0));
        btXoaCT.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btXoaCT.setForeground(new java.awt.Color(255, 255, 255));
        btXoaCT.setText("XÓA");
        btXoaCT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btXoaCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btXoaCTMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(txMaHDCT, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(58, 58, 58)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(txSoSP, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txTongTienCT, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(207, 207, 207)
                        .addComponent(btCTHDF, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 843, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btSuaCT, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btXoaCT, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txMaHDCT, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txSoSP, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txTongTienCT, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btCTHDF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btSuaCT, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btXoaCT, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        txMaHD.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(542, 542, 542)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(txMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(jLabel5)
                        .addGap(6, 6, 6)
                        .addComponent(txMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(jLabel4)
                        .addGap(6, 6, 6)
                        .addComponent(txMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73)
                        .addComponent(jLabel7)
                        .addGap(6, 6, 6)
                        .addComponent(txNgayLap, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(btXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(btXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel3)
                        .addGap(6, 6, 6)
                        .addComponent(txMaGG, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel6)
                        .addGap(6, 6, 6)
                        .addComponent(txTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(jLabel9)
                        .addGap(6, 6, 6)
                        .addComponent(txGiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(jLabel8)
                        .addGap(6, 6, 6)
                        .addComponent(txThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(btSua, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(btFHD, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(txSoLuongHD, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(txTongTienHD, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 965, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel1)
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txNgayLap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(txMaGG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(txTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(txGiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(txThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btSua, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btFHD, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txSoLuongHD, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txTongTienHD, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(6, 6, 6)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1070, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 773, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btSuaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btSuaMouseClicked
        //Sua();
        Sum();
    }//GEN-LAST:event_btSuaMouseClicked

    private void btSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSuaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btSuaActionPerformed

    private void btXoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btXoaMouseClicked
        Xoa();
        Sum();
        LoadDBCTF();
    }//GEN-LAST:event_btXoaMouseClicked

    private void btXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btXoaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btXoaActionPerformed

    private void tbHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHDMouseClicked
        Click();
        LoadDBCT();
    }//GEN-LAST:event_tbHDMouseClicked

    private void btXuatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btXuatMouseClicked
//        String MaHD = txMaHD.getText();
//        String MaKH = txMaKH.getText();
//        String MaNV = txMaNV.getText();
//        String MaGG = txMaGG.getText();
//        String NgayLap = txNgayLap.getText();
//        String TongTien = txTongTien.getText();
//        String GiamGia = txGiamGia.getText();
//        String ThanhTien = txThanhTien.getText();
//        HoaDonDTO hd = new HoaDonDTO(MaHD, MaKH, MaNV, NgayLap, MaKH, ICONIFIED, WIDTH, ICONIFIED);
//        ChiTietHoaDonDAO cthd1 = new ChiTietHoaDonDAO();
//        List<ChiTietHoaDonDTO> ct1 = cthd1.getListHD(txMaHD.getText());
        //outBill outbill=new outBill(hd,ct1);
        //outbill.print();
        try {
            int choice = JOptionPane.showConfirmDialog(this, "Có chắc muốn lưu file?");
            if (choice == JOptionPane.YES_OPTION) {
                JOptionPane.showMessageDialog(this, "Lưu thành công");
                ExcelExporter.exportToExcel(tbHD);
                return;
            } else {
                JOptionPane.showMessageDialog(this, "Bạn chưa lưu");
            }

        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi xuất Excel: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        } catch (NullPointerException ex) {

            JOptionPane.showMessageDialog(this, "Bạn đã hủy bỏ xuất Excel.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btXuatMouseClicked

    private void btFHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btFHDMouseClicked
        LoadDBHDF();
    }//GEN-LAST:event_btFHDMouseClicked

    private void btCTHDFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btCTHDFMouseClicked
        LoadDBCTF();
    }//GEN-LAST:event_btCTHDFMouseClicked

    private void btSuaCTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btSuaCTMouseClicked
        int i = tbChiTietHD.getSelectedRow();
        if (i == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn chi tiết hóa đơn muốn sửa");
            return;
        } else {
            try {
                if (sachBUS.selectAll() == null) {
                    sachBUS.selectAll();
                }
                String masach = tbChiTietHD.getModel().getValueAt(i, 1).toString();
                String mahd = tbChiTietHD.getModel().getValueAt(i, 0).toString();
                int sl = Integer.parseInt(JOptionPane.showInputDialog(null, "Nhập số lượng sản phẩm :"));
                while (!sachBUS.CheckSL(masach, sl)) {
                    sl = Integer.parseInt(JOptionPane.showInputDialog(null, "Nhập số lượng sản phẩm :"));
                }
                String magg = null;
                for (HoaDonDTO hd2 : hd) {
                    if (mahd.equals(hd2.getMaHD())) {
                        if (hd2.getMaKM() == null) {
                            magg = "";
                        } else {
                            magg = hd2.getMaKM();
                        }
                    }
                }
                //               ChiTietChuongTrinhGiamGiaBUS gg=new ChiTietChuongTrinhGiamGiaBUS();
                //               if(gg.dsChiTiet==null) gg.docDSCTGG(magg);
                //               ArrayList<ChiTietChuongTrinhGiamGiaDTO> ctct=new ArrayList<>();
                //               float giam=0;
                //               for(Voucher gg1:ctct){
                //                   if(masach.equals(gg1.getMaSach()))
                //                       giam=(float)gg1.getPercent();
                //               }
                ArrayList<ChiTietHoaDonDTO> cthd = new ArrayList<>();
                if (ctBUS.List() == null) {
                    hdBUS.List();
                }
                cthd = ctBUS.List();
                float giamgia1 = 0;
                float thanhtien1 = 0;
                for (ChiTietHoaDonDTO ct2 : cthd) {
                    if (mahd.equals(ct2.getMahD()) && masach.equals(ct2.getMaSach())) {
                        giamgia1 = (int) sl * ct2.getDonGia() * 0 / 100;
                        thanhtien1 = (int) sl * ct2.getDonGia() - giamgia1;
                        ct2.setGiamGia((int) giamgia1);
                        ct2.setSoLuong(sl);
                        ct2.setThanhTien((int) thanhtien1);
                        ctBUS.Sua(ct2);
                    }
                }

                float tongtien = 0;
                float giamgia = 0;
                float thanhtien = 0;
                for (ChiTietHoaDonDTO ct1 : cthd) {
                    if (mahd.equals(ct1.getMahD())) {
                        tongtien = tongtien + (ct1.getDonGia() * ct1.getSoLuong());
                        giamgia = giamgia + ct1.getGiamGia();
                        thanhtien = thanhtien + ct1.getThanhTien();
                    }
                }
                for (HoaDonDTO hd1 : hd) {
                    if (hd1.getMaHD().equals(mahd)) {
                        hd1.setTongTien((int) tongtien);
                        hd1.setGiamGia((int) giamgia);
                        hd1.setThanhTien((int) thanhtien);
                        if (hd1.getMaKM() == null) {
                            hd1.setMaKM("");
                        }
                        int g = hdBUS.set(hd1);
                    }
                }
                outModel(model, hd);
                outModelCT(modelct, cthd);

            } catch (Exception ex) {

            }
        }
        Sum();
    }//GEN-LAST:event_btSuaCTMouseClicked

    private void btXoaCTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btXoaCTMouseClicked
        int i = tbChiTietHD.getSelectedRow();
        if (i == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn chi tiết hóa đơn muốn xóa");
            return;
        } else {
            int j = JOptionPane.showConfirmDialog(null, "Xác nhận xóa", "Alert", JOptionPane.YES_NO_OPTION);
            if (j == 0) {
                String masach = tbChiTietHD.getModel().getValueAt(i, 1).toString();
                String mahd = tbChiTietHD.getModel().getValueAt(i, 0).toString();
                ctBUS.XoaMS(masach, mahd);
                modelct.removeRow(i);
                float tongtien = 0;
                float giamgia = 0;
                float thanhtien = 0;
                ArrayList<ChiTietHoaDonDTO> cthd = new ArrayList<>();
                if (ctBUS.List() == null) {
                    hdBUS.List();
                }
                cthd = ctBUS.List();
                for (ChiTietHoaDonDTO ct1 : cthd) {
                    if (mahd.equals(ct1.getMahD())) {
                        tongtien = tongtien + (ct1.getDonGia() * ct1.getSoLuong());
                        giamgia = giamgia + ct1.getGiamGia();
                        thanhtien = thanhtien + ct1.getThanhTien();
                    }
                }
                for (HoaDonDTO hd1 : hd) {
                    if (hd1.getMaHD().equals(mahd)) {
                        hd1.setTongTien((int) tongtien);
                        hd1.setGiamGia((int) giamgia);
                        hd1.setThanhTien((int) thanhtien);
                        if (hd1.getMaKM() == null) {
                            hd1.setMaKM("");
                        }
                        int g = hdBUS.set(hd1);
                    }
                }
                int tong = 0;
                for (ChiTietHoaDonDTO dto : cthd) {
                    tong = tong + (int) dto.getThanhTien();
                }
                txSoSP.setText(String.valueOf(modelct.getRowCount()));
                txTongTienCT.setText(String.valueOf(tong));
            }

        }
        Sum();

        outModel(model, hd);
    }//GEN-LAST:event_btXoaCTMouseClicked

    private void btTimMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btTimMouseClicked
//        TimKiem();
        Sum();
        if (cboTK.getSelectedItem().equals("Mã HĐ")) {
            String a = txtTK.getText();
            List<HoaDonDTO> hd = hdBUS.timkiemMHD(a);
            if (a.isEmpty()) {
                JOptionPane.showMessageDialog(this, "vui lòng nhập thông tin");
                return;
            }
            if (hd == null || hd.isEmpty()) {
                model.setRowCount(0);
                JOptionPane.showMessageDialog(this, "không tìm thấy");
                //count();
                return;
            } else {
                fillTable(hd);

                JOptionPane.showMessageDialog(this, "tìm thành công");
                //count();
                return;

            }
        }

        if (cboTK.getSelectedItem().equals("Mã KH")) {
            String a = txtTK.getText();
            List<HoaDonDTO> hd = hdBUS.timkiemMKH(a);
            if (a.isEmpty()) {
                JOptionPane.showMessageDialog(this, "vui lòng nhập thông tin");
                return;
            }
            if (hd == null || hd.isEmpty()) {
                model.setRowCount(0);
                JOptionPane.showMessageDialog(this, "không tìm thấy");

                return;
            } else {
                fillTable(hd);
                JOptionPane.showMessageDialog(this, "tìm thành công");

                return;

            }
        }

        if (cboTK.getSelectedItem().equals("Mã NV")) {
            String a = txtTK.getText();
            List<HoaDonDTO> hd = hdBUS.timkiemMNV(a);
            if (a.isEmpty()) {
                JOptionPane.showMessageDialog(this, "vui lòng nhập thông tin");
                return;
            }
            if (hd == null || hd.isEmpty()) {
                model.setRowCount(0);
                JOptionPane.showMessageDialog(this, "không tìm thấy");

                return;
            } else {
                fillTable(hd);
                JOptionPane.showMessageDialog(this, "tìm thành công");

                return;

            }
        }
    }//GEN-LAST:event_btTimMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HoaDonGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HoaDonGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HoaDonGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HoaDonGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HoaDonGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCTHDF;
    private javax.swing.JButton btFHD;
    private javax.swing.JButton btSua;
    private javax.swing.JButton btSuaCT;
    private javax.swing.JButton btTim;
    private javax.swing.JButton btXoa;
    private javax.swing.JButton btXoaCT;
    private javax.swing.JButton btXuat;
    private javax.swing.JComboBox<String> cboTK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbChiTietHD;
    private javax.swing.JTable tbHD;
    private javax.swing.JTextField txGiamGia;
    private javax.swing.JTextField txMaGG;
    private javax.swing.JTextField txMaHD;
    private javax.swing.JTextField txMaHDCT;
    private javax.swing.JTextField txMaKH;
    private javax.swing.JTextField txMaNV;
    private javax.swing.JTextField txNgayLap;
    private javax.swing.JTextField txSoLuongHD;
    private javax.swing.JTextField txSoSP;
    private javax.swing.JTextField txThanhTien;
    private javax.swing.JTextField txTongTien;
    private javax.swing.JTextField txTongTienCT;
    private javax.swing.JTextField txTongTienHD;
    private javax.swing.JTextField txtTK;
    // End of variables declaration//GEN-END:variables
 public void LoadDB() {
        HoaDonDAO HDBUS = new HoaDonDAO();
        Vector header = new Vector();
        header.add("Mã HĐ");
        header.add("Mã KH");
        header.add("Mã NV");
        header.add("Mã GG");
        header.add("Ngày lập");
        header.add("Tổng tiền");
        header.add("Giảm giá");
        header.add("Thành tiền");
        if (model.getRowCount() == 0) {
            model = new DefaultTableModel(header, 0);
        }
        if (HDBUS.List() == null) {
            HDBUS.List();
        }
        hd = HDBUS.List();
        model.setRowCount(0);
        outModel(model, hd);
    }

    public void LoadDBHDF() {
        HoaDonDAO hd = new HoaDonDAO();
        Vector header = new Vector();
        header.add("Mã HĐ");
        header.add("Mã KH");
        header.add("Mã NV");
        header.add("Ngày lập");
        header.add("Mã GG");
        header.add("Tổng tiền");
        header.add("Giảm giá");
        header.add("Thành tiền");
        if (model.getRowCount() == 0) {
            model = new DefaultTableModel(header, 0);
        }
        if (hd.List() == null) {
            hd.List();
        }
        ArrayList<HoaDonDTO> hddto = hd.List();
        outModel(model, hddto);
    }

    public void outModel(DefaultTableModel model, List<HoaDonDTO> hd) // Xuất ra Table từ ArrayList
    {
        Vector row;
        model.setRowCount(0);
        for (HoaDonDTO h : hd) {
            row = new Vector();
            row.add(h.getMaHD());
            row.add(h.getMaKH());
            row.add(h.getIdNV());
            String magg = h.getMaKM();
            if (h.getMaKM() == null) {
                magg = "";
            }
            row.add(magg);
            row.add(h.getNgayLap());
            row.add(h.getTongTien());
            row.add(h.getGiamGia());
            row.add(h.getThanhTien());
            model.addRow(row);
        }
        tbHD.setModel(model);
    }
//Click lên table

    public void Click() {
        int i = tbHD.getSelectedRow();
        txMaHD.setText(tbHD.getModel().getValueAt(i, 0).toString());
        txMaKH.setText(tbHD.getModel().getValueAt(i, 1).toString());
        txMaNV.setText(tbHD.getModel().getValueAt(i, 2).toString());
        String magg = tbHD.getModel().getValueAt(i, 4).toString();
        txMaGG.setText(magg);
        txNgayLap.setText(tbHD.getModel().getValueAt(i, 3).toString());
        txTongTien.setText(tbHD.getModel().getValueAt(i, 5).toString());
        txGiamGia.setText(tbHD.getModel().getValueAt(i, 6).toString());
        txThanhTien.setText(tbHD.getModel().getValueAt(i, 7).toString());
    }
//Sửa
//    public void Sua(){
//                StringBuilder sb =new StringBuilder();
//                vlBUS.checkEmpty(txMaKH, sb, "Mã Khác Hàng Còn Trống!");
//                vlBUS.checkEmpty(txMaNV, sb, "Mã Nhân Viên Còn Trống!");
//                vlBUS.checkEmpty(txNgayLap, sb, "Ngày Lập Còn Trống!");
//                vlBUS.checkEmpty(txTongTien, sb, "Tổng Tiền Còn Trống!");
//                vlBUS.checkEmpty(txGiamGia, sb, "Giảm Giá Còn Trống!");
//                vlBUS.checkEmpty(txThanhTien, sb, "Thành Tiền Còn Trống !");
//                if(sb.length()>0){
//                    JOptionPane.showMessageDialog(this,sb.toString(), "Thông Báo Lỗi Nhập",JOptionPane.ERROR_MESSAGE);
//                    return ;
//                }
//                String MaHD = txMaHD.getText();
//                String MaKH = txMaKH.getText();
//                String MaNV = txMaNV.getText();
//                String NgayLap=txNgayLap.getText();
//                String MaGG=txMaGG.getText();
//                float TongTien=Float.parseFloat(txTongTien.getText());
//                float GiamGia=Float.parseFloat(txGiamGia.getText());
//                float ThanhTien=Float.parseFloat(txThanhTien.getText());
//                HoaDon hd1=new HoaDon(MaHD,MaKH,MaNV,MaGG,java.sql.Date.valueOf(NgayLap),TongTien,GiamGia,ThanhTien);
//                int i = hdBUS.set(hd1);
//                outModel(model, hdBUS.List());
//                tbHD.setRowSelectionInterval(i, i);
//                
//    }
//Xóa

    public void Clean() {
        txMaHD.setText("");
        txMaKH.setText("");
        txMaNV.setText("");
        txMaGG.setText("");
        txNgayLap.setText("");
        txTongTien.setText("");
        txGiamGia.setText("");
        txThanhTien.setText("");
    }

    public void Xoa() {
        if (txMaHD.getText().equals("")) {
            JOptionPane.showMessageDialog(
                    null,
                    "Vui lòng chọn hóa đơn",
                    "Thông báo",
                    JOptionPane.INFORMATION_MESSAGE);
        } else {
            ChiTietHoaDonDAO chitiet = new ChiTietHoaDonDAO();
            HoaDonDAO hoadon = new HoaDonDAO();
            int i = JOptionPane.showConfirmDialog(null, "Xác nhận xóa", "Alert", JOptionPane.YES_NO_OPTION);
            if (i == 0) {
                chitiet.Xoa(txMaHD.getText());
                hoadon.Xoa(txMaHD.getText());
                Clean();
                tbHD.clearSelection();
                outModel(model, hoadon.List());
                JOptionPane.showMessageDialog(
                        null,
                        "Xóa thành công",
                        "Thông báo",
                        JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }

    /* *******************************Chi tiết hóa đơn***************** */
//Load DB CTHD
    public void LoadDBCT() {
        Vector header = new Vector();
        header.add("Mã HĐ");
        header.add("Mã sách");
        header.add("Tên sách");
        header.add("Số lượng");
        header.add("Đơn giá");
        header.add("Giảm Giá");
        header.add("Thành tiền");
        if (modelct.getRowCount() == 0) {
            modelct = new DefaultTableModel(header, 0);
        }
        txMaHDCT.setText(txMaHD.getText());
        if (ctBUS.List() == null) {
            ctBUS.List();
        }
        ct = ctBUS.getListHD(txMaHD.getText());
        modelct.setRowCount(0);
        outModelCT(modelct, ct);
    }

    public void LoadDBCTF() {
        ChiTietHoaDonDAO ct123 = new ChiTietHoaDonDAO();
        Vector header = new Vector();
        header.add("Mã HĐ");
        header.add("Mã sách");
        header.add("Tên sách");
        header.add("Số lượng");
        header.add("Đơn giá");
        header.add("Giảm Giá");
        header.add("Thành tiền");
        if (modelct.getRowCount() == 0) {
            modelct = new DefaultTableModel(header, 0);
        }
        if (ct123.List() == null) {
            ct123.List();
        }
        outModelCT(modelct, ct123.List());
    }

    public void outModelCT(DefaultTableModel model1, List<ChiTietHoaDonDTO> ct) {
        Vector row;
        int tong = 0;
        modelct.setRowCount(0);
        for (ChiTietHoaDonDTO c : ct) {
            row = new Vector();
            row.add(c.getMahD());
            row.add(c.getMaSach());
            row.add(c.getTenSach());
            row.add(c.getSoLuong());
            row.add(c.getDonGia());
            row.add(c.getGiamGia());
            row.add(c.getThanhTien());
            tong = tong + (int) c.getThanhTien();
            model1.addRow(row);
        }
        txSoSP.setText(String.valueOf(modelct.getRowCount()));
        txTongTienCT.setText(String.valueOf(tong));
        tbChiTietHD.setModel(model1);
    }

//Đếm số hóa đơn và tiền
    public void Sum() {
        int Sum = 0;
        int j = 0;
        int n = model.getRowCount();
        for (int i = 0; i < n; i++) {
            String b = tbHD.getModel().getValueAt(i, 7).toString();
            int a = Integer.parseInt(b);
            j = (int) a;
            Sum = Sum + j;
        }
        txSoLuongHD.setText(String.valueOf(model.getRowCount()));
        txTongTienHD.setText(String.valueOf(Sum));
    }
//Tìm kiếm

//    public void TimKiem() {
//
//        int max = txCuoi.getText().equals("") ? 9999999 : Integer.parseInt(txCuoi.getText());
//        int min = txDau.getText().equals("") ? 0 : Integer.parseInt(txDau.getText());
//        SimpleDateFormat a = new SimpleDateFormat("yyyy-MM-dd");
//        String tgmin;
//        if (txNgayMIN.getCalendar() == null) {
//            tgmin = "";
//        } else {
//            tgmin = a.format(txNgayMIN.getDate()).toString();
//        }
//        System.out.print("aaaaa" + tgmin);
//        String tgmax;
//        if (txNgayMAX.getCalendar() == null) {
//            tgmax = "";
//        }
////       else
////        tgmax=a.format(txNgayMAX.getDate()).toString();
////        hd=hdBUS.TimKiem(tgmin,tgmax,max,min,txTimMAHD.getText(),txTimMAKH.getText(),txTimMANV.getText());
////            outModel(model,hd);
//    }
//    
//     public void Sua(){
//                StringBuilder sb =new StringBuilder();
//                vlBUS.checkEmpty(txMaKH, sb, "Mã Khác Hàng Còn Trống!");
//                vlBUS.checkEmpty(txMaNV, sb, "Mã Nhân Viên Còn Trống!");
//                vlBUS.checkEmpty(txNgayLap, sb, "Ngày Lập Còn Trống!");
//                vlBUS.checkEmpty(txTongTien, sb, "Tổng Tiền Còn Trống!");
//                vlBUS.checkEmpty(txGiamGia, sb, "Giảm Giá Còn Trống!");
//                vlBUS.checkEmpty(txThanhTien, sb, "Thành Tiền Còn Trống !");
//                if(sb.length()>0){
//                    JOptionPane.showMessageDialog(this,sb.toString(), "Thông Báo Lỗi Nhập",JOptionPane.ERROR_MESSAGE);
//                    return ;
//                }
//                String MaHD = txMaHD.getText();
//                String MaKH = txMaKH.getText();
//                String MaNV = txMaNV.getText();
//                String NgayLap=txNgayLap.getText();
//                String MaGG=txMaGG.getText();
//                int TongTien=Integer.parseInt(txTongTien.getText());
//                int GiamGia=Integer.parseInt(txGiamGia.getText());
//                int ThanhTien=Integer.parseInt(txThanhTien.getText());
//                HoaDonDTO hd1=new HoaDonDTO(MaHD, MaKH, MaNV, NgayLap, MaKH, ICONIFIED, WIDTH, ICONIFIED);
//                int i = hdBUS.set(hd1);
//                //outModel(model, hdBUS.getList());
//                tbHD.setRowSelectionInterval(i, i);
//                
//    }
    void fillTable(List<HoaDonDTO> list) {
        model = (DefaultTableModel) tbHD.getModel();
        model.setRowCount(0);
        for (HoaDonDTO bs : list) {
            model.addRow(bs.toDataRow());
        }
    }

    public class ExcelExporter {

        public static void exportToExcel(JTable table) throws IOException {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("Chọn nơi lưu File");
            int userSelection = fileChooser.showSaveDialog(null);
            if (userSelection == JFileChooser.APPROVE_OPTION) {
                File fileToSave = fileChooser.getSelectedFile();
                String filePath = fileToSave.getAbsolutePath();

                Workbook workbook = new XSSFWorkbook();
                Sheet sheet = workbook.createSheet("KhachHang");

                // Tạo tiêu đề
                Row headerRow = sheet.createRow(0);
                for (int i = 0; i < table.getColumnCount(); i++) {
                    headerRow.createCell(i).setCellValue(table.getColumnName(i));
                }

                // Thêm dữ liệu từ bảng vào tệp Excel
                for (int rowNum = 0; rowNum < table.getRowCount(); rowNum++) {
                    Row row = sheet.createRow(rowNum + 1);
                    for (int colNum = 0; colNum < table.getColumnCount(); colNum++) {
                        Object value = table.getValueAt(rowNum, colNum);
                        Cell cell = row.createCell(colNum);
                        if (value instanceof String) {
                            cell.setCellValue((String) value);
                        } else if (value instanceof Integer) {
                            cell.setCellValue((Integer) value);
                        } else if (value instanceof Date) {
                            // Xử lý dữ liệu ngày tháng
                            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                            cell.setCellValue(dateFormat.format((Date) value));
                        }
                        // Các kiểu dữ liệu khác có thể được xử lý tương tự
                    }
                }

                // Ghi dữ liệu vào tệp
                try (FileOutputStream outputStream = new FileOutputStream(filePath)) {
                    workbook.write(outputStream);

                }
            }
        }
    }
}
