/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Main.Sach.View;

import Main.GiamGia.Service.KhuyenMaiService;
import Main.GiamGia.model.KhuyenMai;
import Main.Sach.Model.Sach;
import Main.Sach.Service.SachService;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;

import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author pc
 */
public class SachGUI extends javax.swing.JPanel {

    private KhuyenMaiService KMSV = new KhuyenMaiService();
    private SachService SSV = new SachService();
    private DefaultTableModel model = new DefaultTableModel();
    private int index = -1;

    public SachGUI() {
        initComponents();
        fillTableSach(SSV.getAllSach());
        fillComboBoxMaKhuyenMai();
    }

    private void fillComboBoxMaKhuyenMai() {
        List<KhuyenMai> maKhuyenMaiList = KMSV.getAllMaKhuyenMai();
        for (KhuyenMai khuyenMai : maKhuyenMaiList) {
            cbxMKM.addItem(khuyenMai.getMAKM());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlView = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        pInput = new javax.swing.JPanel();
        lbMaSach = new javax.swing.JLabel();
        lbMaNXB = new javax.swing.JLabel();
        lbMaTL = new javax.swing.JLabel();
        lbMaTG = new javax.swing.JLabel();
        lbTenSach = new javax.swing.JLabel();
        lbSoLuong = new javax.swing.JLabel();
        lbDonGia = new javax.swing.JLabel();
        txtTenSach = new javax.swing.JTextField();
        txtSoLuong = new javax.swing.JTextField();
        txtDonGia = new javax.swing.JTextField();
        lnNamXuatBan = new javax.swing.JLabel();
        txtNamXuatBan = new javax.swing.JTextField();
        txtMaSach = new javax.swing.JTextField();
        txtTacGia = new javax.swing.JTextField();
        txtNhaXuatBan = new javax.swing.JTextField();
        txtTheLoai = new javax.swing.JTextField();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        lbImg = new javax.swing.JLabel();
        btnXuatExcel = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        txtTK = new javax.swing.JTextField();
        btnTKMS = new javax.swing.JButton();
        cbxTimKiem = new javax.swing.JComboBox<>();
        jPanel8 = new javax.swing.JPanel();
        txtTKDG_a = new javax.swing.JTextField();
        txtTKDG_b = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnTKDG = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSach = new javax.swing.JTable();
        cbxMKM = new javax.swing.JComboBox<>();
        btnApDung = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("QUẢN LÝ SÁCH");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel2.setForeground(new java.awt.Color(255, 227, 227));

        pInput.setBackground(new java.awt.Color(255, 255, 255));

        lbMaSach.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbMaSach.setText("MÃ SÁCH:");

        lbMaNXB.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbMaNXB.setText("NHÀ XUẤT BẢN");

        lbMaTL.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbMaTL.setText("THỂ LOẠI");

        lbMaTG.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbMaTG.setText("TÁC GIẢ");

        lbTenSach.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbTenSach.setText("TÊN SÁCH:");

        lbSoLuong.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbSoLuong.setText("SỐ LƯỢNG:");

        lbDonGia.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbDonGia.setText("ĐƠN GIÁ:");

        txtTenSach.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtSoLuong.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtDonGia.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lnNamXuatBan.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lnNamXuatBan.setText("NĂM XUẤT BẢN:");

        txtNamXuatBan.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtMaSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaSachActionPerformed(evt);
            }
        });

        txtTacGia.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtNhaXuatBan.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtTheLoai.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout pInputLayout = new javax.swing.GroupLayout(pInput);
        pInput.setLayout(pInputLayout);
        pInputLayout.setHorizontalGroup(
            pInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pInputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pInputLayout.createSequentialGroup()
                        .addGroup(pInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pInputLayout.createSequentialGroup()
                                .addGroup(pInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lbSoLuong, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lbMaTG, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(10, 10, 10))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pInputLayout.createSequentialGroup()
                                .addComponent(lbTenSach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(pInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTenSach, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDonGia, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTacGia, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pInputLayout.createSequentialGroup()
                        .addGroup(pInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbMaSach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbMaNXB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbMaTL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaSach, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNhaXuatBan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTheLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pInputLayout.createSequentialGroup()
                        .addComponent(lnNamXuatBan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(txtNamXuatBan, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pInputLayout.setVerticalGroup(
            pInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pInputLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(pInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pInputLayout.createSequentialGroup()
                        .addComponent(lbMaSach, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7))
                    .addGroup(pInputLayout.createSequentialGroup()
                        .addComponent(txtMaSach)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(pInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbMaNXB, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNhaXuatBan, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbMaTL, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTheLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbMaTG, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTacGia, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTenSach, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenSach, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lnNamXuatBan, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNamXuatBan, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(pInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        btnSua.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSua.setText("SỬA");
        btnSua.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnSua.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSuaMouseClicked(evt);
            }
        });
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnXoa.setText("XÓA");
        btnXoa.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnXoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnXoaMouseClicked(evt);
            }
        });
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnLamMoi.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnLamMoi.setText("LÀM MỚI");
        btnLamMoi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnLamMoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLamMoiMouseClicked(evt);
            }
        });
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        lbImg.setBackground(new java.awt.Color(102, 255, 102));
        lbImg.setForeground(new java.awt.Color(153, 153, 153));
        lbImg.setText("Ảnh");
        lbImg.setToolTipText("");
        lbImg.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 153)));
        lbImg.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        btnXuatExcel.setBackground(new java.awt.Color(255, 0, 0));
        btnXuatExcel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnXuatExcel.setForeground(new java.awt.Color(255, 255, 255));
        btnXuatExcel.setText("XUẤT EXCEL");
        btnXuatExcel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnXuatExcel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnXuatExcelMouseClicked(evt);
            }
        });
        btnXuatExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatExcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnXuatExcel, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE))
                .addGap(131, 131, 131)
                .addComponent(lbImg, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXuatExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(pInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(lbImg, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "TÌM KIẾM", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 18), new java.awt.Color(204, 0, 0))); // NOI18N

        txtTK.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnTKMS.setBackground(new java.awt.Color(102, 255, 0));
        btnTKMS.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnTKMS.setForeground(new java.awt.Color(0, 51, 51));
        btnTKMS.setText("TÌM KIÉM");
        btnTKMS.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnTKMS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTKMSMouseClicked(evt);
            }
        });
        btnTKMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTKMSActionPerformed(evt);
            }
        });

        cbxTimKiem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã Sách", "Tên Sách", "Nhà Xuất Bản", "Thể Loại", "Tác Giả" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(cbxTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(txtTK, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btnTKMS, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(665, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTK, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTKMS, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Thuộc Tính", jPanel4);

        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtTKDG_a.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtTKDG_b.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("NHẬP KHOẢNG KẾT THÚC");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("NHẬP KHOẢNG BẮT ĐẦU");

        btnTKDG.setBackground(new java.awt.Color(102, 255, 0));
        btnTKDG.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnTKDG.setForeground(new java.awt.Color(0, 51, 51));
        btnTKDG.setText("TÌM KIÉM");
        btnTKDG.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnTKDG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTKDGMouseClicked(evt);
            }
        });
        btnTKDG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTKDGActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTKDG_a, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 171, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(txtTKDG_b, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addComponent(btnTKDG, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTKDG_a, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTKDG_b, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTKDG, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        jTabbedPane1.addTab("Đơn Giá", jPanel8);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "THÔNG TIN CHI TIẾT", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 18), new java.awt.Color(204, 0, 51))); // NOI18N

        tblSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Sách", "Nhà Xuất Bản", "Thể Loại", "Tác Giả", "Tên Sách", "Năm Xuất Bản", "Số Lượng", "Giá", "Ảnh"
            }
        ));
        tblSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSachMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSach);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cbxMKM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn Khuyến Mãi" }));

        btnApDung.setText("Áp Dụng");
        btnApDung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApDungActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlViewLayout = new javax.swing.GroupLayout(pnlView);
        pnlView.setLayout(pnlViewLayout);
        pnlViewLayout.setHorizontalGroup(
            pnlViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane1)
            .addGroup(pnlViewLayout.createSequentialGroup()
                .addGap(581, 581, 581)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlViewLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbxMKM, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnApDung, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
        pnlViewLayout.setVerticalGroup(
            pnlViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlViewLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(14, 14, 14)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbxMKM, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlViewLayout.createSequentialGroup()
                        .addComponent(btnApDung, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(2, 2, 2)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtMaSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaSachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaSachActionPerformed

    private void btnSuaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSuaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSuaMouseClicked

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        String maSach = txtMaSach.getText();
        String tenSach = txtTenSach.getText();
        String tacGia = txtTacGia.getText();
        String nhaXuatBan = txtNhaXuatBan.getText();
        String theLoai = txtTheLoai.getText();
        int soLuong = Integer.parseInt(txtSoLuong.getText());
        double donGia = Double.parseDouble(txtDonGia.getText());
        int namXuatBan = Integer.parseInt(txtNamXuatBan.getText());

        // Tạo một đối tượng sách mới
        Sach sach = new Sach(maSach, nhaXuatBan, theLoai, tacGia, tenSach, namXuatBan, soLuong, WIDTH, maSach);

        // Cập nhật sách trong cơ sở dữ liệu
        boolean updated = SSV.updateSach(sach); // Giả sử có phương thức updateSach trong SachService

        // Kiểm tra kết quả cập nhật
        if (updated) {
            // Cập nhật hàng được chọn từ bảng
            int selectedRow = tblSach.getSelectedRow();
            model.setValueAt(tenSach, selectedRow, 4);
            model.setValueAt(tacGia, selectedRow, 3);
            model.setValueAt(nhaXuatBan, selectedRow, 1);
            model.setValueAt(theLoai, selectedRow, 2);
            model.setValueAt(soLuong, selectedRow, 6);
            model.setValueAt(donGia, selectedRow, 7);
            model.setValueAt(namXuatBan, selectedRow, 5);
            JOptionPane.showMessageDialog(null, "Cập nhật sách thành công!");
        } else {
            JOptionPane.showMessageDialog(null, "Cập nhật sách thất bại!");
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXoaMouseClicked

    }//GEN-LAST:event_btnXoaMouseClicked

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int selectedRow = tblSach.getSelectedRow();

        // Kiểm tra xem có hàng nào được chọn không
        if (selectedRow != -1) {
            // Lấy mã sách từ hàng được chọn
            String maSach = model.getValueAt(selectedRow, 0).toString();

            // Xóa sách từ cơ sở dữ liệu
            boolean deleted = SSV.deleteSach(maSach); // Giả sử có phương thức deleteSach trong SachService

            // Kiểm tra kết quả xóa
            if (deleted) {
                // Xóa hàng được chọn từ bảng
                model.removeRow(selectedRow);
                JOptionPane.showMessageDialog(null, "Xóa sách thành công!");
            } else {
                JOptionPane.showMessageDialog(null, "Xóa sách thất bại!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn sách để xóa!");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnLamMoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLamMoiMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnLamMoiMouseClicked

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        txtMaSach.setText("");
        txtTenSach.setText("");
        txtTacGia.setText("");
        txtNhaXuatBan.setText("");
        txtTheLoai.setText("");
        txtSoLuong.setText("");
        txtDonGia.setText("");
        txtNamXuatBan.setText("");
    }//GEN-LAST:event_btnLamMoiActionPerformed
    public void lammoi() {
        txtMaSach.setText("");
        txtTenSach.setText("");
        txtTacGia.setText("");
        txtNhaXuatBan.setText("");
        txtTheLoai.setText("");
        txtSoLuong.setText("");
        txtDonGia.setText("");
        txtNamXuatBan.setText("");
    }
    private void btnXuatExcelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXuatExcelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnXuatExcelMouseClicked

    private void btnXuatExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatExcelActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Chọn nơi lưu file");

        int userSelection = fileChooser.showSaveDialog(this);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();

            if (!fileToSave.getAbsolutePath().endsWith(".xlsx")) {
                fileToSave = new File(fileToSave + ".xlsx");
            }

            try (XSSFWorkbook workbook = new XSSFWorkbook()) {
                XSSFSheet sheet = workbook.createSheet("DanhSachSach");
                model = (DefaultTableModel) tblSach.getModel();

                // Tạo dòng tiêu đề
                Row headerRow = sheet.createRow(0);
                for (int i = 0; i < model.getColumnCount(); i++) {
                    Cell cell = headerRow.createCell(i);
                    cell.setCellValue(model.getColumnName(i));
                }

                // Lặp qua từng dòng và cột để thêm dữ liệu vào sheet
                for (int rowNum = 0; rowNum < model.getRowCount(); rowNum++) {
                    Row row = sheet.createRow(rowNum + 1);
                    for (int colNum = 0; colNum < model.getColumnCount(); colNum++) {
                        Object value = model.getValueAt(rowNum, colNum);
                        Cell cell = row.createCell(colNum);
                        if (value != null) {
                            if (value instanceof Boolean) {
                                cell.setCellValue((Boolean) value);
                            } else if (value instanceof Number) {
                                cell.setCellValue(((Number) value).doubleValue());
                            } else {
                                cell.setCellValue(value.toString());
                            }
                        }
                    }
                }

                try (FileOutputStream outputStream = new FileOutputStream(fileToSave)) {
                    workbook.write(outputStream);
                    JOptionPane.showMessageDialog(this, "Đã xuất file Excel thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(this, "Có lỗi khi ghi file!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Có lỗi khi tạo workbook!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnXuatExcelActionPerformed

    private void btnTKMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTKMSActionPerformed

        // Lấy giá trị của combobox tìm kiếm và từ khóa tìm kiếm
        String timKiemTheo = cbxTimKiem.getSelectedItem().toString();
        String tuKhoa = txtTK.getText();
// Xác định trường cần tìm kiếm trong cơ sở dữ liệu dựa trên giá trị của combobox
        String truongTimKiem = null;

        switch (timKiemTheo) {
            case "Mã Sách":
                truongTimKiem = "MaSach";
                break;
            case "Tên Sách":
                truongTimKiem = "TenSach";
                break;
            case "Nhà Xuất Bản":
                truongTimKiem = "MANXB";
                break;
            case "Thể Loại":
                truongTimKiem = "TheLoai";
                break;
            case "Tác Giả":
                truongTimKiem = "MATG";
                break;
            // Thêm các trường khác nếu cần
            default:
                // Xử lý khi không có lựa chọn nào được chọn
                break;
        }

        // Thực hiện tìm kiếm và hiển thị kết quả
        List<Sach> ketQua = SSV.timKiemSach(truongTimKiem, tuKhoa);
        hienThiKetQuaTimKiem(ketQua);


    }//GEN-LAST:event_btnTKMSActionPerformed

    private void btnTKMSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTKMSMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTKMSMouseClicked

    private void btnTKDGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTKDGMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTKDGMouseClicked

    private void btnTKDGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTKDGActionPerformed
        // Lấy giá trị của khoảng giá từ hai TextField
        int giaDau = Integer.parseInt(txtTKDG_a.getText());
        int giaCuoi = Integer.parseInt(txtTKDG_b.getText());

        // Gọi phương thức tìm kiếm theo khoảng giá từ service của bạn
        List<Sach> ketQua = SSV.timKiemSachDonGia(giaDau, giaCuoi);

        // Hiển thị kết quả tìm kiếm trên giao diện người dùng
        hienThiKetQuaTimKiemDonGia(ketQua);
    }//GEN-LAST:event_btnTKDGActionPerformed

    private void tblSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSachMouseClicked
        showDataSach();
    }//GEN-LAST:event_tblSachMouseClicked

    private void btnApDungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApDungActionPerformed
        // Kiểm tra xem đã chọn sách trên bảng tblSach chưa
        int selectedRowIndex = tblSach.getSelectedRow();
        if (selectedRowIndex == -1) {
            // Nếu không có sách nào được chọn, hiển thị thông báo
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một sách để áp dụng mã giảm giá!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        // Lấy thông tin sách từ hàng đã chọn trên bảng
        String maSach = tblSach.getValueAt(selectedRowIndex, 0).toString(); // Giả sử cột đầu tiên chứa mã sách
        String tenSach = tblSach.getValueAt(selectedRowIndex, 1).toString(); // Giả sử cột thứ hai chứa tên sách

        // Lấy mã giảm giá từ combobox cbxMKM
        String maGiamGia = cbxMKM.getSelectedItem().toString();

        // Áp dụng mã giảm giá cho sách
        boolean giamGiaThanhCong = SSV.apDungMaKhuyenMaiChoSach(maSach, maGiamGia);

        if (giamGiaThanhCong) {
            JOptionPane.showMessageDialog(this, "Đã áp dụng mã giảm giá cho sách " + tenSach + " thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            lammoi();
            fillTableSach(SSV.getAllSach());

        } else {
            JOptionPane.showMessageDialog(this, "Có lỗi xảy ra khi áp dụng mã giảm giá cho sách " + tenSach + "!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnApDungActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApDung;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnTKDG;
    private javax.swing.JButton btnTKMS;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXuatExcel;
    private javax.swing.JComboBox<String> cbxMKM;
    private javax.swing.JComboBox<String> cbxTimKiem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbDonGia;
    private javax.swing.JLabel lbImg;
    private javax.swing.JLabel lbMaNXB;
    private javax.swing.JLabel lbMaSach;
    private javax.swing.JLabel lbMaTG;
    private javax.swing.JLabel lbMaTL;
    private javax.swing.JLabel lbSoLuong;
    private javax.swing.JLabel lbTenSach;
    private javax.swing.JLabel lnNamXuatBan;
    private javax.swing.JPanel pInput;
    private javax.swing.JPanel pnlView;
    private javax.swing.JTable tblSach;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtMaSach;
    private javax.swing.JTextField txtNamXuatBan;
    private javax.swing.JTextField txtNhaXuatBan;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTK;
    private javax.swing.JTextField txtTKDG_a;
    private javax.swing.JTextField txtTKDG_b;
    private javax.swing.JTextField txtTacGia;
    private javax.swing.JTextField txtTenSach;
    private javax.swing.JTextField txtTheLoai;
    // End of variables declaration//GEN-END:variables

    private void fillTableSach(List<Sach> allSach) {
        model = (DefaultTableModel) tblSach.getModel();
        model.setRowCount(0);
        for (Sach sach : allSach) {
            model.addRow(sach.toDataRow());
        }
    }

    private void showDataSach() {
        {
            // Lấy chỉ mục của hàng được chọn trong bảng
            int selectedRow = tblSach.getSelectedRow();

            // Kiểm tra xem có hàng nào được chọn không
            if (selectedRow != -1) {
                // Lấy dữ liệu của sách từ hàng được chọn
                String maSach = model.getValueAt(selectedRow, 0).toString();
                String tenSach = model.getValueAt(selectedRow, 4).toString();
                String tacGia = model.getValueAt(selectedRow, 3).toString();
                String nhaXuatBan = model.getValueAt(selectedRow, 1).toString();
                String theLoai = model.getValueAt(selectedRow, 2).toString();
                int soLuong = Integer.parseInt(model.getValueAt(selectedRow, 6).toString());
                double donGia = Double.parseDouble(model.getValueAt(selectedRow, 7).toString());
                int namXuatBan = Integer.parseInt(model.getValueAt(selectedRow, 5).toString());
                String img = model.getValueAt(selectedRow, 8).toString();
                // Hiển thị dữ liệu lên các trường nhập liệu
                txtMaSach.setText(maSach);
                txtTenSach.setText(tenSach);
                txtTacGia.setText(tacGia);
                txtNhaXuatBan.setText(nhaXuatBan);
                txtTheLoai.setText(theLoai);
                txtSoLuong.setText(String.valueOf(soLuong));
                txtDonGia.setText(String.valueOf(donGia));
                txtNamXuatBan.setText(String.valueOf(namXuatBan));
                lbImg.setText(img);
            }
        }
    }

    private void hienThiKetQuaTimKiem(List<Sach> ketQua) {
        model = (DefaultTableModel) tblSach.getModel();
        model.setRowCount(0); // Xóa các dòng hiện tại trong bảng

        // Kiểm tra xem danh sách kết quả có trống không
        if (ketQua.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy kết quả!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Duyệt qua danh sách kết quả tìm kiếm và thêm từng dòng vào bảng
            for (Sach sach : ketQua) {
                model.addRow(sach.toDataRow());
                JOptionPane.showMessageDialog(this, "Đã tìm thấy");
            }
        }
    }

    private void hienThiKetQuaTimKiemDonGia(List<Sach> ketQua) {
        model = (DefaultTableModel) tblSach.getModel();
        model.setRowCount(0); // Xóa các dòng hiện tại trong bảng

        if (ketQua.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy sách trong khoảng giá này!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Duyệt qua danh sách kết quả tìm kiếm và thêm từng dòng vào bảng
            for (Sach sach : ketQua) {
                model.addRow(sach.toDataRow());
                JOptionPane.showMessageDialog(this, "Đã tìm thấy");
            }
        }
    }

}
